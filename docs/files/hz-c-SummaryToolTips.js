NDSummary.OnToolTipsLoaded("File:hz.c",{13:"<div class=\"NDToolTip TInformation LC\"><div class=\"TTSummary\">This file is licensed under MIT.</div></div>",14:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype14\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">hz_bump_allocator_t</div></div></div><div class=\"TTSummary\">A bump allocator, meant to be used on a temporary stack buffer.&nbsp; The blocks are allocated and stored on the multiple of their size rounded to a power of two.&nbsp; Another name for this is &quot;monotonic allocator&quot;.</div></div>",26:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype26\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">HZ_INLINE <span class=\"SHKeyword\">void</span> * hz_bump_allocator_alloc(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">hz_bump_allocator_t&nbsp;</td><td class=\"PSymbols\">*</td><td class=\"PName last\">a,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td></td><td class=\"PName last\">size</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Allocates new block of memory, and pushes pointer forward.&nbsp; Blocks are allocated on the multiple of the size rounded up to the next power of two.</div></div>",15:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype15\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">hz_byte_stream_t</div></div></div><div class=\"TTSummary\">A struct to store a buffer.&nbsp; This is also used to handle reading bytes sequentially.&nbsp; Unpacks in network-order (big endian).</div></div>",27:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype27\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">HZ_INLINE hz_byte_stream_t hz_byte_stream_create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">u8&nbsp;</td><td class=\"PSymbols\">*</td><td class=\"PName last\">data,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td></td><td class=\"PName last\">size</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Creates a hz_byte_stream_t structure, holds data and a bump pointer allowing seeking, unpacking various primitives from memory.</div></div>",25:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype25\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">hz_shape_call_cache_t</div></div></div><div class=\"TTSummary\">Holds the cache of all OpenType lookups required in a call to hz_shape.</div></div>"});